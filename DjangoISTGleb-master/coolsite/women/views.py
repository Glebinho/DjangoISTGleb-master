from django.http import HttpResponse,HttpResponseBadRequest,HttpResponseForbidden,HttpResponseServerError
from django.shortcuts import render
#для хранения представлений(контролеры) текущего приложения
# Create your views here.

def index(request):
    return HttpResponse('главная страница women')

def categories(request):
    return HttpResponse('<h1>Статьи по категориям</h1>')

def categories_id(request, catid):
    return HttpResponse(f'<h1>Статьи по номерам {catid}</h1>')

def categories_sl(request, catid):
    return HttpResponse(f'<h1>Статьи по названиям и категориям {catid}</h1>')

dir = {
'1': ['Буренок Д. 2005'],
'2': ['Горбанёв К. 2006'],
'3': ['Капшуков Д. 2004'],
'4': ['Климин Т. 2004'],
'5': ['Кашаева Р. 2002'],
'6': ['Косенков Г. 2004'],
'7': ['Костин М. 2001'],
'8': ['Кузенков Б. 2003'],
'9': ['Миколадзе А. 2004'],
'10': ['Мишин А. 2004'],
'11': ['Мишин А. 2004'],
'12': ['Сентюрина Е. 2002'],
'13': ['Пешеходько А. 2004'],
}

def students(request, students_id):
    if students_id>0 and students_id<=13:
        return HttpResponse(f"<h1>Студент {students_id}){dir[str(students_id)][0]} найден</h1>")
    else:
        return HttpResponse(f"<h1>Студента под номеромом {students_id} нет</h1>")
def spisok(request,key):
    return HttpResponse(f"<h1> Список участников № {dir[key]} </h1>")

date= {
"2001": ['Костин М. 2001'],
"2002": ['Кашаева Р. 2002','Сентюрина Е. 2002'],
"2003": ['Кузенков Б. 2003'],
"2004": ['Капшуков Д. 2004','Климин Т. 2004','Косенков Г. 2004','Миколадзе А. 2004','Мишин А. 2004','Мишин А. 2004','Пешеходько А. 2004'],
"2005": ['Буренок Д. 2005'],
"2006": ['Горбанёв К. 2006'],
"2007": ['Студентов этого года нет'],
}
def date(request,date):
    dir = {
        "2001": ['Костин М. 2001'],
        "2002": ['Кашаева Р. 2002','Сентюрина Е. 2002'],
        "2003": ['Кузенков Б. 2003'],
        "2004": ['Капшуков Д. 2004','Климин Т. 2004','Косенков Г. 2004','Миколадзе А. 2004','Мишин А. 2004','Мишин А. 2004','Пешеходько А. 2004'],
        "2005": ['Буренок Д. 2005'],
        "2006": ['Горбанёв К. 2006'],
        "2007": ['Студентов этого года нет'],
    }
    if date > 2001 and date < 2007:
        return HttpResponse(f"<h1> Студенты {dir[str(date)]} найдены </h1>")
    else:
        return HttpResponse(f"<h1>Студента с таким годом {date} нет</h1>")

def pageNotFound(request,exception):
    return HttpResponse(f"<h1> Страница не найдена <br>{exception} </h1>")


dir1 = {
'1': ['Победа В.В. Путина на выборах президента России 2000'],
'2': ['Принят закон «О политических партиях». 2001'],
'3': ['Главы государств-членов НАТО и В. Путин подписали Римскую декларацию, которая определила новый формат отношений России и НАТО. 2002'],
'4': ['Выборы в Госдуму 4-го созыва. 2003'],
'5': ['Теракт в Беслане. 2004'],
'6': [' России впервые отмечался День народного единства. 2005'],
'7': ['Убит первый заместитель председателя Центрального банка А. Козлов, который вел жесткую борьбу за чистоту банковского бизнеса. 2006'],
'8': ['Скончался первый президент России Б. Ельцин. 2007'],
'9': ['Д. Медведев избран третьим президентом России, набрав 70,3% голосов. 2008'],
'10': ['Конституционный суд окончательно запретил применять смертную казнь в России. 2009'],
'11': ['Перепись населения в России. 2010'],
'12': ['Милиция официально прекратила свое существование – стала полицией. 2011'],
'13': ['Новым министром обороны назначен С. Шойгу. 2012'],
'14': ['На территорию Челябинской области упали части метеорита общей массой 4–6 т. 2013'],
'15': ['XXII зимние Олимпийские игры в Сочи. 2014'],
'16': ['В России появился новый вид войск – Воздушно-космические силы, которые были объединены с Военно-воздушными силами. 2015'],
'17': ['Выборы в Госдуму VII созыва впервые после длительного перерыва проводились по смешанной системе. 2016'],
'18': ['В России начал действовать новый вид уголовного наказания – принудительные работы. 2017'],
'19': ['Чемпионат мира по футболу в России. 2018'],
'20': ['Пожар в Нотр-Даме. 2019'],
'21': ['Пандемия коронавируса и Brexit. 2020'],
'22': ['Массовая вакцинация от COVID-19. 2021'],
'23': ['Начало спецоперации на Украине. 2022'],
}

def years(request, years_id):
    if years_id>0 and years_id<=10:
        return HttpResponse(f"<h1>{years_id}){dir1[str(years_id)][0]} Год</h1>")
    else:
        return HttpResponse(f"<h1>Гож {years_id} еще не наступил</h1>")

def spisok_year(request,key):
        return HttpResponse(f"<h1> Год № {dir1[key]} </h1>")
date1= {
"2000":['Победа В.В. Путина на выборах президента России'],
"2001": ['Принят закон «О политических партиях».'],
"2002": ['Главы государств-членов НАТО и В. Путин подписали Римскую декларацию, которая определила новый формат отношений России и НАТО. '],
"2003": ['Выборы в Госдуму 4-го созыва.'],
"2004": ['Теракт в Беслане.'],
"2005": ['России впервые отмечался День народного единства.'],
"2006": ['Убит первый заместитель председателя Центрального банка А. Козлов, который вел жесткую борьбу за чистоту банковского бизнеса.'],
"2007": ['Скончался первый президент России Б. Ельцин.'],
"2008": ['Д. Медведев избран третьим президентом России, набрав 70,3% голосов.'],
"2009": ['Конституционный суд окончательно запретил применять смертную казнь в России.'],
"2010": ['Перепись населения в России.'],
"2011": ['Милиция официально прекратила свое существование – стала полицией.'],
"2012": ['Новым министром обороны назначен С. Шойгу.'],
"2013": ['На территорию Челябинской области упали части метеорита общей массой 4–6 т.'],
"2014": ['XXII зимние Олимпийские игры в Сочи. '],
"2015": ['В России появился новый вид войск – Воздушно-космические силы, которые были объединены с Военно-воздушными силами.'],
"2016": ['Выборы в Госдуму VII созыва впервые после длительного перерыва проводились по смешанной системе.'],
"2017": ['В России начал действовать новый вид уголовного наказания – принудительные работы.'],
"2018": ['Чемпионат мира по футболу в России.'],
"2019": ['Пожар в Нотр-Даме.'],
"2020": ['Пандемия коронавируса и Brexit.'],
"2021": ['Массовая вакцинация от COVID-19.'],
"2022": ['Начало спецоперации на Украине.'],

}
def pageNotFound(request,exception):
    return HttpResponse(f"<h1> Страница не найдена  </h1>")
def badRequest(request,exception):
    return HttpResponseBadRequest(f"Bad Request")
def forbiden(request,exception):
    return HttpResponseForbidden(f"Forbiden")
def serverError(request,exception):
    return HttpResponseServerError(f"ServerError")